<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAkAALEAAACxAAAAAAAAAAAA
        AACvp5zTtqyj5MvCubf///8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANXVqgbLwrjDs6qg6LOo
        nsjLwbnMy8G5zMvBuczLwbnMy8G5zMvBuczLwbnMy8G5zK+lm8y3qaJKqJ6U/si/tv97l8LOXIbGwFyG
        xsBchsbAXIbGwFyGxsBchsbAXIbGwIacwNTHvbT/qJ6T/rmwqU3Lwbn/y8G5/8vBuf/Lwbn/y8G5/8vB
        uf/Lwbn/y8G5/62jmeUAAAAAsaadwbqvpv+nrb7hXIfGtlyHxrZch8a2XIfGtlyHxrZch8a2XIfGtq6y
        vee3rKP/tKqfqsy/vxTLwbn/y8G5/8vBuf/Lwbn/y8G5/8vBuf/Lwbn/y8G5/62jmeUAAAAAyLakDqid
        k/upn5T9yKSkDgAAAAAAAAAAAAAAAAAAAAAAAAAAuaqiIamflP6onpP5zMyZBcm8vBPLwbn/y8G5/8vB
        uf/Lwbn/y8G5/8vBuf/Lwbn/y8G5/62jmeUAAAAASTrZZVNF091rX8bzW1DVuFxTgdheVG/jXlRv415U
        b+NdU4fUXlXTwG5jw/ljW9C8VUrXLQAAAADLwbl/y8G5mcvBuZnLwbmZy8G5mcvBuZnLwbmZy8G5mamg
        ldNNPtghPjDY/lJI2v9UStr/VEra/11Uff9hWU3/YVlN/2FZTf9bU4j/VEra/1RK2v9UStr/VEra6GYz
        zAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKSbkLdGPNtiQDLY/01G2f9NRtr/VEra/1VL
        zP9YT6v/WE+r/1hPq/9VS8//VEra/0xG2/9ORtv/VEra/1dJ2yMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAKSbkLdJOtllQDTZ/1V54v9UdOH/TkXZ/1RK2v9UStr/VEra/1RK2v9UStr/TUXb/1iB
        4/9RbOH/T0TZ/1NM3SUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKSbkLdJOtllQDPZ/0xb
        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
        AAA=
</value>
  </data>
</root>